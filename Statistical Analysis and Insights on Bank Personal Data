{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 39,
   "id": "a64826c8-fc71-4c1f-9904-26d03bf2e1a0",
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "import scipy.stats as stats\n",
    "import pandas as pd\n",
    "from sklearn.impute import KNNImputer"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "352140ad-ce6b-440c-a3b1-57ead27947bb",
   "metadata": {},
   "outputs": [],
   "source": [
    "df = pd.read_csv(r\"C:\\Users\\Sravan\\Downloads\\Bank Personal Loan Modelling.csv\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "id": "cc9c4b34-3c38-4937-bad8-e23cf5c926bc",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>ID</th>\n",
       "      <th>Age</th>\n",
       "      <th>Experience</th>\n",
       "      <th>Income</th>\n",
       "      <th>ZIP Code</th>\n",
       "      <th>Family</th>\n",
       "      <th>CCAvg</th>\n",
       "      <th>Education</th>\n",
       "      <th>Mortgage</th>\n",
       "      <th>Personal Loan</th>\n",
       "      <th>Securities Account</th>\n",
       "      <th>CD Account</th>\n",
       "      <th>Online</th>\n",
       "      <th>CreditCard</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>25</td>\n",
       "      <td>1</td>\n",
       "      <td>49</td>\n",
       "      <td>91107</td>\n",
       "      <td>4</td>\n",
       "      <td>1.6</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2</td>\n",
       "      <td>45</td>\n",
       "      <td>19</td>\n",
       "      <td>34</td>\n",
       "      <td>90089</td>\n",
       "      <td>3</td>\n",
       "      <td>1.5</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>3</td>\n",
       "      <td>39</td>\n",
       "      <td>15</td>\n",
       "      <td>11</td>\n",
       "      <td>94720</td>\n",
       "      <td>1</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>4</td>\n",
       "      <td>35</td>\n",
       "      <td>9</td>\n",
       "      <td>100</td>\n",
       "      <td>94112</td>\n",
       "      <td>1</td>\n",
       "      <td>2.7</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>5</td>\n",
       "      <td>35</td>\n",
       "      <td>8</td>\n",
       "      <td>45</td>\n",
       "      <td>91330</td>\n",
       "      <td>4</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4995</th>\n",
       "      <td>4996</td>\n",
       "      <td>29</td>\n",
       "      <td>3</td>\n",
       "      <td>40</td>\n",
       "      <td>92697</td>\n",
       "      <td>1</td>\n",
       "      <td>1.9</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4996</th>\n",
       "      <td>4997</td>\n",
       "      <td>30</td>\n",
       "      <td>4</td>\n",
       "      <td>15</td>\n",
       "      <td>92037</td>\n",
       "      <td>4</td>\n",
       "      <td>0.4</td>\n",
       "      <td>1</td>\n",
       "      <td>85</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4997</th>\n",
       "      <td>4998</td>\n",
       "      <td>63</td>\n",
       "      <td>39</td>\n",
       "      <td>24</td>\n",
       "      <td>93023</td>\n",
       "      <td>2</td>\n",
       "      <td>0.3</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4998</th>\n",
       "      <td>4999</td>\n",
       "      <td>65</td>\n",
       "      <td>40</td>\n",
       "      <td>49</td>\n",
       "      <td>90034</td>\n",
       "      <td>3</td>\n",
       "      <td>0.5</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4999</th>\n",
       "      <td>5000</td>\n",
       "      <td>28</td>\n",
       "      <td>4</td>\n",
       "      <td>83</td>\n",
       "      <td>92612</td>\n",
       "      <td>3</td>\n",
       "      <td>0.8</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5000 rows Ã— 14 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "        ID  Age  Experience  Income  ZIP Code  Family  CCAvg  Education  \\\n",
       "0        1   25           1      49     91107       4    1.6          1   \n",
       "1        2   45          19      34     90089       3    1.5          1   \n",
       "2        3   39          15      11     94720       1    1.0          1   \n",
       "3        4   35           9     100     94112       1    2.7          2   \n",
       "4        5   35           8      45     91330       4    1.0          2   \n",
       "...    ...  ...         ...     ...       ...     ...    ...        ...   \n",
       "4995  4996   29           3      40     92697       1    1.9          3   \n",
       "4996  4997   30           4      15     92037       4    0.4          1   \n",
       "4997  4998   63          39      24     93023       2    0.3          3   \n",
       "4998  4999   65          40      49     90034       3    0.5          2   \n",
       "4999  5000   28           4      83     92612       3    0.8          1   \n",
       "\n",
       "      Mortgage  Personal Loan  Securities Account  CD Account  Online  \\\n",
       "0            0              0                   1           0       0   \n",
       "1            0              0                   1           0       0   \n",
       "2            0              0                   0           0       0   \n",
       "3            0              0                   0           0       0   \n",
       "4            0              0                   0           0       0   \n",
       "...        ...            ...                 ...         ...     ...   \n",
       "4995         0              0                   0           0       1   \n",
       "4996        85              0                   0           0       1   \n",
       "4997         0              0                   0           0       0   \n",
       "4998         0              0                   0           0       1   \n",
       "4999         0              0                   0           0       1   \n",
       "\n",
       "      CreditCard  \n",
       "0              0  \n",
       "1              0  \n",
       "2              0  \n",
       "3              0  \n",
       "4              1  \n",
       "...          ...  \n",
       "4995           0  \n",
       "4996           0  \n",
       "4997           0  \n",
       "4998           0  \n",
       "4999           1  \n",
       "\n",
       "[5000 rows x 14 columns]"
      ]
     },
     "execution_count": 28,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "id": "12e716a3-c58e-438b-a800-7237a9bbd92c",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "ID                    0\n",
       "Age                   0\n",
       "Experience            0\n",
       "Income                0\n",
       "ZIP Code              0\n",
       "Family                0\n",
       "CCAvg                 0\n",
       "Education             0\n",
       "Mortgage              0\n",
       "Personal Loan         0\n",
       "Securities Account    0\n",
       "CD Account            0\n",
       "Online                0\n",
       "CreditCard            0\n",
       "dtype: int64"
      ]
     },
     "execution_count": 33,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.isna().sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "1baa60c4-7a20-4e11-abd2-d0fd3d7fe2d8",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Mean Score: 85.0\n",
      "Variance of Scores: 0.0\n",
      "All learners scored the same, and the score is: 85.0\n"
     ]
    }
   ],
   "source": [
    "###1. A statistics test was conducted for 10 learners in a class. The mean of their score is 85 and the variance of the score is zero. What can you interpret about the score obtained by all learners?# Given scores (assuming all scores are 85 since variance is zero)\n",
    "scores = [85] * 10  # 10 learners with the same score\n",
    "\n",
    "# Calculate mean and variance\n",
    "mean_score = np.mean(scores)\n",
    "variance_score = np.var(scores)\n",
    "\n",
    "print(\"Mean Score:\", mean_score)\n",
    "print(\"Variance of Scores:\", variance_score)\n",
    "\n",
    "# Interpretation based on the variance\n",
    "if variance_score == 0:\n",
    "    print(\"All learners scored the same, and the score is:\", mean_score)\n",
    "else:\n",
    "    print(\"Scores vary among learners.\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "2dbdfe11-a7fd-43da-be41-ead52706e686",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Object `locality` not found.\n",
      "Mean House Size: 2110.0\n",
      "Median House Size: 1700.0\n",
      "The distribution is right-skewed (positively skewed). There are larger houses in the locality.\n"
     ]
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1000x500 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "###2. In a residential locality, the mean size of the house is 2224 square feet and the median value of the house is 1500 square feet. What can you interpret about the skewness in the distribution of\n",
    "\n",
    "house size? Are there bigger or smaller houses in the residential locality?\n",
    "\n",
    "# Hypothetical house sizes in square feet with a right-skewed distribution\n",
    "house_sizes = [1200, 1300, 1400, 1450, 1500, 1550, 1600, 1700, 1750, 2000, 2200, 2500, 3000, 3500, 5000]\n",
    "\n",
    "# Calculate mean and median\n",
    "mean_size = np.mean(house_sizes)\n",
    "median_size = np.median(house_sizes)\n",
    "\n",
    "print(\"Mean House Size:\", mean_size)\n",
    "print(\"Median House Size:\", median_size)\n",
    "\n",
    "# Determine skewness\n",
    "if mean_size > median_size:\n",
    "    print(\"The distribution is right-skewed (positively skewed). There are larger houses in the locality.\")\n",
    "else:\n",
    "    print(\"The distribution is not right-skewed.\")\n",
    "\n",
    "# Plot the distribution of house sizes\n",
    "plt.figure(figsize=(10, 5))\n",
    "sns.histplot(house_sizes, kde=True)\n",
    "plt.axvline(mean_size, color='red', linestyle='--', label=f'Mean: {mean_size}')\n",
    "plt.axvline(median_size, color='blue', linestyle='-', label=f'Median: {median_size}')\n",
    "plt.legend()\n",
    "plt.title(\"Distribution of House Sizes\")\n",
    "plt.xlabel(\"House Size (square feet)\")\n",
    "plt.ylabel(\"Frequency\")\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "db6aa717-0c0f-4c2d-be21-4e4467c97e2c",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Coefficient of Variation for Group 1: 0.07071067811865475 %\n",
      "Coefficient of Variation for Group 2: 0.25 %\n",
      "Group 2 has higher relative variability in expenditure.\n"
     ]
    }
   ],
   "source": [
    "###3. The following table shows the mean and variance of the expenditure for two groups of people. You want to compare the variability in expenditure for both groups with respect to their mean.Which statistical measure would you use to evaluate the variability in expenditure?\n",
    "\n",
    "# Given data\n",
    "group1_mean = 500000  # mean for Group 1\n",
    "group1_variance = 125000  # variance for Group 1\n",
    "group2_mean = 40000  # mean for Group 2\n",
    "group2_variance = 10000  # variance for Group 2\n",
    "\n",
    "# Calculate standard deviation from variance\n",
    "group1_std = group1_variance ** 0.5\n",
    "group2_std = group2_variance ** 0.5\n",
    "\n",
    "# Calculate Coefficient of Variation (CV)\n",
    "group1_cv = (group1_std / group1_mean) * 100\n",
    "group2_cv = (group2_std / group2_mean) * 100\n",
    "\n",
    "# Output results\n",
    "print(\"Coefficient of Variation for Group 1:\", group1_cv, \"%\")\n",
    "print(\"Coefficient of Variation for Group 2:\", group2_cv, \"%\")\n",
    "\n",
    "# Interpret the group with higher CV as having greater variability relative to its mean\n",
    "if group1_cv > group2_cv:\n",
    "    print(\"Group 1 has higher relative variability in expenditure.\")\n",
    "else:\n",
    "    print(\"Group 2 has higher relative variability in expenditure.\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "8f7460fb-4f21-43d5-aa0f-1062954b1652",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Class interval with the highest frequency: 35-45\n",
      "Age interval affected the least: 55-65\n",
      "Patients aged 45 years and above: 19\n",
      "Modal class interval: 35-45\n",
      "Median class interval: 35-45\n"
     ]
    }
   ],
   "source": [
    "###4.During the survey, the ages of 80 patients infected by COVID and admitted to one of the city hospitals were recorded and the collected data is represented in the less than cumulative frequency distribution table.\n",
    "##a. Which class interval has the highest frequency?\n",
    "\n",
    "##b. Which age was affected the least?\n",
    "\n",
    "##c. How many patients aged 45 years and above were admitted?\n",
    "\n",
    "##d. Which is the modal class interval in the above dataset\n",
    "\n",
    "##e. What is the median class interval of age?\n",
    "\n",
    "\n",
    "# Given data\n",
    "data = {\n",
    "    \"Age_Interval\": [\"5-15\", \"15-25\", \"25-35\", \"35-45\", \"45-55\", \"55-65\"],\n",
    "    \"Patients\": [6, 11, 21, 23, 14, 5]\n",
    "}\n",
    "\n",
    "# Create a DataFrame\n",
    "df = pd.DataFrame(data)\n",
    "\n",
    "# Calculate cumulative frequency\n",
    "df[\"Cumulative_Frequency\"] = df[\"Patients\"].cumsum()\n",
    "\n",
    "# a. Class interval with the highest frequency\n",
    "highest_frequency_interval = df.loc[df[\"Patients\"].idxmax(), \"Age_Interval\"]\n",
    "\n",
    "# b. Age interval affected the least\n",
    "lowest_frequency_interval = df.loc[df[\"Patients\"].idxmin(), \"Age_Interval\"]\n",
    "\n",
    "# c. Patients aged 45 and above\n",
    "patients_45_and_above = df.loc[df[\"Age_Interval\"].isin([\"45-55\", \"55-65\"]), \"Patients\"].sum()\n",
    "\n",
    "# d. Modal class interval (class with highest frequency)\n",
    "modal_class_interval = highest_frequency_interval\n",
    "\n",
    "# e. Median class interval (where cumulative frequency reaches 50% of total, which is 40)\n",
    "median_threshold = 40\n",
    "median_class_interval = df.loc[df[\"Cumulative_Frequency\"] >= median_threshold, \"Age_Interval\"].iloc[0]\n",
    "\n",
    "# Print results\n",
    "print(\"Class interval with the highest frequency:\", highest_frequency_interval)\n",
    "print(\"Age interval affected the least:\", lowest_frequency_interval)\n",
    "print(\"Patients aged 45 years and above:\", patients_45_and_above)\n",
    "print(\"Modal class interval:\", modal_class_interval)\n",
    "print(\"Median class interval:\", median_class_interval)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "5ad49d4e-58c9-4686-b0e8-2d04d91783e5",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Arithmetic Mean Return: 4.500000000000001 %\n",
      "Geometric Mean Return: -1.4282599080668423 %\n"
     ]
    }
   ],
   "source": [
    "###5. Assume you are the trader and you have invested over the years, and you are worried about the average return on investment. What average method would you use to compute the average return for the data given below?\n",
    "\n",
    "# Given data\n",
    "years = [2015, 2016, 2017, 2018, 2019, 2020]\n",
    "returns = [0.36, 0.23, -0.48, -0.30, 0.15, 0.31]  # Convert percentages to decimals\n",
    "asset_prices = [5000, 6400, 7890, 9023, 4567, 3890]\n",
    "\n",
    "# Calculate Arithmetic Mean\n",
    "arithmetic_mean = sum(returns) / len(returns)\n",
    "\n",
    "# Calculate Geometric Mean\n",
    "product = 1\n",
    "for r in returns:\n",
    "    product *= (1 + r)\n",
    "geometric_mean = (product ** (1 / len(returns))) - 1\n",
    "\n",
    "# Convert to percentage for output\n",
    "arithmetic_mean_percentage = arithmetic_mean * 100\n",
    "geometric_mean_percentage = geometric_mean * 100\n",
    "\n",
    "# Output results\n",
    "print(\"Arithmetic Mean Return:\", arithmetic_mean_percentage, \"%\")\n",
    "print(\"Geometric Mean Return:\", geometric_mean_percentage, \"%\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "c14ea3f3-7a51-48d7-b931-062cf3202136",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Sample Average Height (Statistic): 174.97 cm\n",
      "True Average Height (Parameter): 175.00 cm\n"
     ]
    }
   ],
   "source": [
    "###6. Suppose you have been told to measure the average height of all the males on the earth. What would be your strategy for the same? Would the average height be a parameter or a statistic? Justify your answer.\n",
    "\n",
    "# Simulated average height and standard deviation\n",
    "true_average_height = 175  # Parameter: true average height of all males (in cm)\n",
    "std_dev = 7                 # Standard deviation (in cm)\n",
    "population_size = 8000000000 # Approximate global male population\n",
    "\n",
    "# Sample size\n",
    "sample_size = 1000\n",
    "\n",
    "# Generate a sample of heights based on a normal distribution\n",
    "# (for demonstration, assuming heights are normally distributed)\n",
    "sample_heights = np.random.normal(loc=true_average_height, scale=std_dev, size=sample_size)\n",
    "\n",
    "# Calculate the sample average height (statistic)\n",
    "sample_average_height = np.mean(sample_heights)\n",
    "\n",
    "# Output results\n",
    "print(\"Sample Average Height (Statistic): {:.2f} cm\".format(sample_average_height))\n",
    "print(\"True Average Height (Parameter): {:.2f} cm\".format(true_average_height))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "297a4492-4901-4fd9-ade9-3972c52f5b7d",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Mean: 8.083333333333334\n",
      "Standard Deviation: 2.3060909686210462\n",
      "Z-scores: [-1.553856019598407, -0.816677814951721, -0.3396801531215125, 0.44086147532791964, 1.004585984763621, 1.2647665275800983]\n"
     ]
    }
   ],
   "source": [
    "###7. Calculate the z score of the following numbers:\n",
    "\n",
    "X = [4.5,6.2,7.3,9.1,10.4,11]\n",
    "\n",
    "# Calculate mean and standard deviation\n",
    "mean_X = np.mean(X)\n",
    "std_dev_X = np.std(X)\n",
    "\n",
    "# Calculate z-scores\n",
    "z_scores = [(x - mean_X) / std_dev_X for x in X]\n",
    "\n",
    "# Output results\n",
    "print(\"Mean:\", mean_X)\n",
    "print(\"Standard Deviation:\", std_dev_X)\n",
    "print(\"Z-scores:\", z_scores)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "f8ed82bd-d939-40e8-a821-56c1c3b2a010",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Statistical Summary:\n",
      "        Age_Interval   Patients  Cumulative_Frequency\n",
      "count             6   6.000000              6.000000\n",
      "unique            6        NaN                   NaN\n",
      "top            5-15        NaN                   NaN\n",
      "freq              1        NaN                   NaN\n",
      "mean            NaN  13.333333             46.166667\n",
      "std             NaN   7.501111             30.746816\n",
      "min             NaN   5.000000              6.000000\n",
      "25%             NaN   7.250000             22.250000\n",
      "50%             NaN  12.500000             49.500000\n",
      "75%             NaN  19.250000             71.500000\n",
      "max             NaN  23.000000             80.000000\n"
     ]
    }
   ],
   "source": [
    "###8. Give us the statistical summary for all the variables in the dataset.\n",
    "\n",
    "# Display the statistical summary for all variables\n",
    "summary_stats = df.describe(include='all')\n",
    "print(\"Statistical Summary:\\n\", summary_stats)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "54c36aeb-6b42-41a1-89b9-326fa4b28621",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Central Tendency and Dispersion:\n",
      "          Patients  Cumulative_Frequency\n",
      "mean    13.333333             46.166667\n",
      "median  12.500000             49.500000\n",
      "std      7.501111             30.746816\n",
      "min      5.000000              6.000000\n",
      "max     23.000000             80.000000\n"
     ]
    }
   ],
   "source": [
    "#9. Central Tendency and Dispersion\n",
    "# Calculate mean, median, standard deviation, and variance for quantitative variables\n",
    "central_dispersion_stats = df.describe().loc[['mean', '50%', 'std', 'min', 'max']]\n",
    "central_dispersion_stats.rename(index={'50%': 'median'}, inplace=True)\n",
    "print(\"Central Tendency and Dispersion:\\n\", central_dispersion_stats)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 63,
   "id": "aeffa383-d7ef-4399-b89a-1da0dfc090c8",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Correlation between Age and Experience: 0.9942148569683318\n"
     ]
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 800x500 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "##10.Linear Relationship between Age and Experience\n",
    "# Calculate correlation\n",
    "correlation, _ = stats.pearsonr(df['Age'], df['Experience'])\n",
    "print(\"Correlation between Age and Experience:\", correlation)\n",
    "\n",
    "# Plot relationship\n",
    "plt.figure(figsize=(8, 5))\n",
    "sns.scatterplot(x='Age', y='Experience', data=df)\n",
    "plt.title('Relationship between Age and Experience')\n",
    "plt.xlabel('Age')\n",
    "plt.ylabel('Experience')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "id": "86b4be42-9562-4a9a-836b-c654b523d9f5",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Most Frequent Family Size: 1\n"
     ]
    }
   ],
   "source": [
    "##11. Mode of Family Size\n",
    "# Mode of Family Size\n",
    "family_mode = df['Family'].mode()[0]\n",
    "print(\"Most Frequent Family Size:\", family_mode)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 58,
   "id": "1f38e7ff-6987-451e-a290-5a29caae1ff2",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Percentage Variation in Income: 62.39814097758612\n"
     ]
    }
   ],
   "source": [
    "##12. Percentage of Variation in Income\n",
    "\n",
    "# Calculate coefficient of variation (CV) for Income\n",
    "income_cv = (df['Income'].std() / df['Income'].mean()) * 100\n",
    "print(\"Percentage Variation in Income:\", income_cv)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 55,
   "id": "fc131eb7-4690-4ed0-92e1-96fd488a4109",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Mortgage\n",
       "98.0     17\n",
       "103.0    16\n",
       "119.0    16\n",
       "83.0     16\n",
       "91.0     16\n",
       "         ..\n",
       "355.0     1\n",
       "337.0     1\n",
       "382.0     1\n",
       "505.0     1\n",
       "541.0     1\n",
       "Name: count, Length: 346, dtype: int64"
      ]
     },
     "execution_count": 55,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df['Mortgage'].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 64,
   "id": "f2d30a9d-3e77-4157-8e8a-d51f756f500f",
   "metadata": {},
   "outputs": [
    {
     "ename": "AttributeError",
     "evalue": "module 'pandas' has no attribute 'nan'",
     "output_type": "error",
     "traceback": [
      "\u001b[1;31m---------------------------------------------------------------------------\u001b[0m",
      "\u001b[1;31mAttributeError\u001b[0m                            Traceback (most recent call last)",
      "Cell \u001b[1;32mIn[64], line 3\u001b[0m\n\u001b[0;32m      1\u001b[0m \u001b[38;5;66;03m##13. Impute Mortgage Variable\u001b[39;00m\n\u001b[0;32m      2\u001b[0m \u001b[38;5;66;03m# Replace 0 values with NaN for imputation\u001b[39;00m\n\u001b[1;32m----> 3\u001b[0m df[\u001b[38;5;124m'\u001b[39m\u001b[38;5;124mMortgage\u001b[39m\u001b[38;5;124m'\u001b[39m] \u001b[38;5;241m=\u001b[39m df[\u001b[38;5;124m'\u001b[39m\u001b[38;5;124mMortgage\u001b[39m\u001b[38;5;124m'\u001b[39m]\u001b[38;5;241m.\u001b[39mreplace(\u001b[38;5;241m0\u001b[39m, pd\u001b[38;5;241m.\u001b[39mnan)\n\u001b[0;32m      5\u001b[0m \u001b[38;5;66;03m# Initialize the KNN Imputer\u001b[39;00m\n\u001b[0;32m      6\u001b[0m imputer \u001b[38;5;241m=\u001b[39m KNNImputer(n_neighbors\u001b[38;5;241m=\u001b[39m\u001b[38;5;241m98\u001b[39m)  \u001b[38;5;66;03m# You can adjust n_neighbors as needed\u001b[39;00m\n",
      "\u001b[1;31mAttributeError\u001b[0m: module 'pandas' has no attribute 'nan'"
     ]
    }
   ],
   "source": [
    "##13. Impute Mortgage Variable\n",
    "# Replace 0 values with NaN for imputation\n",
    "df['Mortgage'] = df['Mortgage'].replace(0, pd.nan)\n",
    "\n",
    "# Initialize the KNN Imputer\n",
    "imputer = KNNImputer(n_neighbors=98)  # You can adjust n_neighbors as needed\n",
    "\n",
    "# Reshape the data to a 2D array\n",
    "Mortgage_reshaped = df[['Mortgage']].values\n",
    "\n",
    "# Perform k-NN imputation\n",
    "imputed_Mortgage = imputer.fit_transform(Mortgage_reshaped)\n",
    "\n",
    "# Replace the original column with the imputed values\n",
    "df['Mortgage'] = imputed_Mortgage\n",
    "\n",
    "# Output the updated DataFrame\n",
    "print(\"Updated DataFrame after k-NN Imputation:\")\n",
    "print(df)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 60,
   "id": "3da10cb6-8b57-406a-bbfb-29749f3ed2d3",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\Sravan\\AppData\\Local\\Temp\\ipykernel_47820\\429215933.py:4: FutureWarning: \n",
      "\n",
      "`shade` is now deprecated in favor of `fill`; setting `fill=True`.\n",
      "This will become an error in seaborn v0.14.0; please update your code.\n",
      "\n",
      "  sns.kdeplot(df[df['CreditCard'] == 1]['CCAvg'], shade=True)\n"
     ]
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 800x500 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "###14. Density Curve for CCAvg\n",
    "# Plot density curve for CCAvg\n",
    "plt.figure(figsize=(8, 5))\n",
    "sns.kdeplot(df[df['CreditCard'] == 1]['CCAvg'], shade=True)\n",
    "plt.title(\"Density Curve of CCAvg for Customers with Credit Cards\")\n",
    "plt.xlabel(\"CCAvg\")\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "482eb942-8d1a-439e-bf53-0747eb3eb030",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1000x600 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "###15.Detect Outliers\n",
    "\n",
    "# Boxplot to detect outliers\n",
    "plt.figure(figsize=(10, 6))\n",
    "sns.boxplot(data=df[['Income', 'CCAvg', 'Mortgage']])\n",
    "plt.title(\"Outliers in Quantitative Variables\")\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "be1960a8-1250-4fcc-98e2-259cecb122a8",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Decile Values of Income:\n",
      " 0.1     22.0\n",
      "0.2     33.0\n",
      "0.3     42.0\n",
      "0.4     52.0\n",
      "0.5     64.0\n",
      "0.6     78.0\n",
      "0.7     88.3\n",
      "0.8    113.0\n",
      "0.9    145.0\n",
      "Name: Income, dtype: float64\n"
     ]
    }
   ],
   "source": [
    "###16. Decile Values of Income \n",
    "# Calculate deciles for Income\n",
    "income_deciles = df['Income'].quantile([0.1 * i for i in range(1, 10)])\n",
    "print(\"Decile Values of Income:\\n\", income_deciles)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "475a77c7-f9dc-41e0-a27f-ffcfe0a0866b",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "IQR of Quantitative Variables:\n",
      " Income       59.0\n",
      "CCAvg         1.8\n",
      "Mortgage    101.0\n",
      "dtype: float64\n"
     ]
    }
   ],
   "source": [
    "###17. IQR of Quantitative Variables\n",
    "# Calculate IQR\n",
    "iqr_values = df[['Income', 'CCAvg', 'Mortgage']].quantile(0.75) - df[['Income', 'CCAvg', 'Mortgage']].quantile(0.25)\n",
    "print(\"IQR of Quantitative Variables:\\n\", iqr_values)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "2a1ce455-6204-4f54-9001-24c20b5edf32",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Correlation between Income and CCAvg: 0.6459836696249652\n"
     ]
    }
   ],
   "source": [
    "###18. Income vs Credit Card Spending \n",
    "# Correlation between Income and CCAvg to check relationship\n",
    "correlation_income_ccavg, _ = stats.pearsonr(df['Income'], df['CCAvg'])\n",
    "print(\"Correlation between Income and CCAvg:\", correlation_income_ccavg)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "c97f2ae9-986b-4af7-8270-c00ae282a032",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Number of customers using online banking: 2984\n",
      "Average Income of online banking users: 74.31166219839142\n"
     ]
    }
   ],
   "source": [
    "###19. Customers Using Online Banking\n",
    "\n",
    "# Count of customers using online banking\n",
    "online_count = df['Online'].sum()\n",
    "online_income = df[df['Online'] == 1]['Income'].mean()\n",
    "print(\"Number of customers using online banking:\", online_count)\n",
    "print(\"Average Income of online banking users:\", online_income)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "id": "913a640b-826d-4c3e-9738-0e74a2ec091b",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Number of Outliers (Income) beyond Â±3Ïƒ: 2\n"
     ]
    }
   ],
   "source": [
    "###20.Z-Score for Income \n",
    "# Calculate Z-scores for Income\n",
    "income_mean = df['Income'].mean()\n",
    "income_std = df['Income'].std()\n",
    "z_scores_income = (df['Income'] - income_mean) / income_std\n",
    "\n",
    "# Find observations outside Â±3Ïƒ\n",
    "outliers = df[abs(z_scores_income) > 3]\n",
    "print(\"Number of Outliers (Income) beyond Â±3Ïƒ:\", len(outliers))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "c1963d4f-ba55-41b9-b9e4-30ce740aed3f",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.12.4"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
